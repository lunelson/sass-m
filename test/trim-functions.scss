@import '../index';

// type, line, font
@function trim-value-alt($xtra: 1, $line: $curr-line, $font: $curr-font){
  $lh: line($line, $font);
  $em: font-value('em-adjust', $font) * 1em;
  $ex: font-value('ex-adjust', $font) * 1ex;
  @return add((($lh * 1em - $em) / 2), subtract($em * $xtra, $ex * $xtra));
}

@function trim-value($type: 'ex', $line: $curr-line, $font: $curr-font){
  $lh: line($line, $font);
  $em: font-value('em-adjust', $font) * 1em;
  $ex: font-value('ex-adjust', $font) * 1ex;
  $deltas: (em: 0, ex: subtract($em, $ex), mx: subtract($em/2, $ex/2));
  @return add((($lh * 1em - $em) / 2), map-get($deltas, $type));
}

// mult, type, line, font
@function trim-margin($mult: $curr-inner-y, $type: 'ex', $line: $curr-line, $font: $curr-font) {
  @return subtract(inner-y($mult), trim-value($type, $line, $font));
}

@function trim-margin-ex($mult: $curr-inner-y, $line: $curr-line, $font: $curr-font) {
  @return subtract(inner-y($mult), trim-value('ex', $line, $font));
}

@function trim-margin-em($mult: $curr-inner-y, $line: $curr-line, $font: $curr-font) {
  @return subtract(inner-y($mult), trim-value('em', $line, $font));
}

@function trim-margin-mx($mult: $curr-inner-y, $line: $curr-line, $font: $curr-font) {
  @return subtract(inner-y($mult), trim-value('mx', $line, $font));
}

@include m-init((output: false, basis: breakpoints));

.foo {
  // line
  out: trim-value(1, -1);
}

/* fonts: #{map-stringify($fonts)} */
/* base: #{map-stringify($base)} */
/* media: #{map-stringify($media)} */
